<?xml version="1.0" encoding="utf-8"?>

<!--

BigBlueButton open source conferencing system - http://www.bigbluebutton.org/

Copyright (c) 2012 BigBlueButton Inc. and by respective authors (see below).

This program is free software; you can redistribute it and/or modify it under the
terms of the GNU Lesser General Public License as published by the Free Software
Foundation; either version 3.0 of the License, or (at your option) any later
version.

BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License along
with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.

-->

<CustomMdiWindow xmlns="org.bigbluebutton.common.*" 
		xmlns:mx="http://www.adobe.com/2006/mxml" 
		initialize="init()" 
		horizontalScrollPolicy="off"
		verticalScrollPolicy="off"
		creationComplete="onCreationComplete()" 
		implements="org.bigbluebutton.common.IBbbModuleWindow"
		title="{ResourceUtil.getInstance().getString('bbb.videodock.title')}"
		xmlns:mate="http://mate.asfusion.com/" styleNameFocus="videoDockStyleFocus"
		layout="absolute" visible="true" styleNameNoFocus="videoDockStyleNoFocus"
		horizontalAlign="center" 
		verticalAlign="middle" >

	<mx:Script>
		<![CDATA[
			import com.asfusion.mate.events.Dispatcher;
			import mx.controls.Button;

			import org.bigbluebutton.common.Images;
			import org.bigbluebutton.main.views.MainCanvas;
			import org.bigbluebutton.util.i18n.ResourceUtil;
			import org.bigbluebutton.modules.videoconf.events.VideoDockEvent;
			import org.bigbluebutton.modules.videoconf.model.VideoConfOptions;

			public var expandVideosBtn:Button;
			public var contractVideosBtn:Button;

			private var _dispatcher:Dispatcher = new Dispatcher();
			private var _showExpandVideosButton:Boolean = false;
			private var _images:Images = new Images();
			private var _options:VideoConfOptions = new VideoConfOptions();

			public function get showExpandVideosButton():Boolean {
				return _showExpandVideosButton;
			}

			public function set showExpandVideosButton(value:Boolean):void {
				_showExpandVideosButton = value;

				if (expandVideosBtn && expandVideosBtn.visible != value) {
					expandVideosBtn.visible = expandVideosBtn.includeInLayout = value;
					this.windowControls.invalidateDisplayList();
				}
			}

			private function init():void {
				if(!expandVideosBtn) {
					expandVideosBtn = new Button();
					expandVideosBtn.setStyle("upSkin", _images.expand);
					expandVideosBtn.setStyle("overSkin", _images.expand);
					expandVideosBtn.setStyle("downSkin", _images.expand);
					expandVideosBtn.setStyle("disabledSkin", _images.expand);
					expandVideosBtn.buttonMode = true;
					expandVideosBtn.toolTip = ResourceUtil.getInstance().getString('bbb.videodock.expandVideos');
					expandVideosBtn.visible = false;
					expandVideosBtn.includeInLayout = false;
					this.windowControls.addChild(expandVideosBtn);
					this.windowControls.setChildIndex(expandVideosBtn, 0);

					expandVideosBtn.addEventListener(MouseEvent.CLICK, onExpandVideosBtnClicked);
				}

				if(!contractVideosBtn) {
					contractVideosBtn = new Button();
					contractVideosBtn.setStyle("upSkin", _images.contract);
					contractVideosBtn.setStyle("overSkin", _images.contract);
					contractVideosBtn.setStyle("downSkin", _images.contract);
					contractVideosBtn.setStyle("disabledSkin", _images.contract);
					contractVideosBtn.buttonMode = true;
					contractVideosBtn.toolTip = ResourceUtil.getInstance().getString('bbb.videodock.contractVideos');
					contractVideosBtn.visible = false;
					contractVideosBtn.includeInLayout = false;
					this.windowControls.addChild(contractVideosBtn);
					this.windowControls.setChildIndex(contractVideosBtn, 0);

					contractVideosBtn.addEventListener(MouseEvent.CLICK, onContractVideosBtnClicked);
				}
			}

			private function refreshButtons():void {
				expandVideosBtn.visible = expandVideosBtn.includeInLayout = !expandVideosBtn.visible;
				contractVideosBtn.visible = contractVideosBtn.includeInLayout = !contractVideosBtn.visible;
				this.windowControls.invalidateDisplayList();
			}

			private function onExpandVideosBtnClicked(event:MouseEvent):void {
				refreshButtons();
				_dispatcher.dispatchEvent(new VideoDockEvent(VideoDockEvent.EXPAND_VIDEOS));
			}

			private function onContractVideosBtnClicked(event:MouseEvent):void {
				refreshButtons();
				_dispatcher.dispatchEvent(new VideoDockEvent(VideoDockEvent.CONTRACT_VIDEOS));
			}

			private function onCreationComplete():void {
				this.showCloseButton = false;
				this.showExpandVideosButton = _options.showExpandVideosButton;
			}

			public function getPrefferedPosition():String {
				return MainCanvas.BOTTOM_LEFT;
			}
		]]>
	</mx:Script>
</CustomMdiWindow>
